package coding.io.rentACar;

import java.util.HashMap;
import java.util.Map;

import org.modelmapper.ModelMapper;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.http.HttpStatus;
import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestControllerAdvice;

import coding.io.rentACar.core.utilities.exceptions.BusinessException;
import coding.io.rentACar.core.utilities.exceptions.ProblemDetails;
import coding.io.rentACar.core.utilities.exceptions.ValidationProblemDetails;

@SpringBootApplication
@RestControllerAdvice

public class RentACarApplication {

	public static void main(String[] args) {
		SpringApplication.run(RentACarApplication.class, args);
	}
	
	@ExceptionHandler
	@ResponseStatus(code=HttpStatus.BAD_REQUEST)
	public ProblemDetails handleBusinessException(BusinessException businessException) {
		ProblemDetails problemDetails = new ProblemDetails();
		problemDetails.setMessage(businessException.getMessage());
		return problemDetails;
		
	}
	
	@ExceptionHandler(MethodArgumentNotValidException.class)
	@ResponseStatus(code = HttpStatus.BAD_REQUEST)
	public ValidationProblemDetails handleValidationException(MethodArgumentNotValidException ex) {
	    BindingResult bindingResult = ex.getBindingResult();

	    Map<String, String> validationErrors = new HashMap<>();

	    for (FieldError fieldError : bindingResult.getFieldErrors()) {
	        validationErrors.put(fieldError.getField(), fieldError.getDefaultMessage());
	    }

	    ValidationProblemDetails validationProblemDetails = new ValidationProblemDetails();
	    validationProblemDetails.setMessage("VALIDATION.EXCEPTION");
	    validationProblemDetails.setValidationErrors(validationErrors);

	    return validationProblemDetails;
	}



	
	@Bean
	public ModelMapper getModelMapper() {
		return new ModelMapper();
	}

}
